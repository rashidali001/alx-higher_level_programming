# run test with python3 -m doctest -v ./tests/0-add_integer.txt

First, we input the method we want to test
    >>> add_integer = __import__('0-add_integer').add_integer

Success Cases:

    >>> print(add_integer(1, 2))
    3

    >>> print(add_integer(3, 4))
    7

    >>> print(add_integer(-1, 2))
    1

    >>> print(add_integer(1.5, 2.9))
    3

    >>> print(add_integer(-2.9, 1))
    -1

Case where only one parameter is passed:

    >>> print(add_integer(1))
    99

Failed Cases:

Test when no parameter is passed:

    >>> print(add_integer(None))
    Traceback (most recent call last):
    ...
    TypeError: must be an integer

    >>> print(add_integer(None, None))
    Traceback (most recent call last):
    ...
    TypeError: must be an integer

Test when extra agruments are passed:

    >>> print(add_integer(1, 2, 4))
    Traceback (most recent call last):
    ...
    TypeError: add_integer function accepts only 2 arguments

Test for other data types:

    >>> print(add_integer("string"))
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> print(add_integer(2, "string"))
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

    >>> print(add_integer([1, 2], 0))
    Traceback (most recent call last):
    ...
    TypeError: c must be an integer

    >>> print(add_integer(0, [1, 2]))
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

    >>> print(add_integer(float("NaN"))
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer

Test max/min numbers Python can handle ("inf" is infinity):
     >>> print(add_integer(float("inf"))
     Traceback (most recent call last):
     ...
     OverflowError: cannot convert float infinity to integer
     >>> print(add_integer(float("-inf"))
     Traceback (most recent call last):
     ...
     OverflowError: cannot convert float infinity to integer

